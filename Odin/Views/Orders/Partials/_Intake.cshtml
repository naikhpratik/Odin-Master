@model Odin.ViewModels.Orders.Transferee.OrdersTransfereeViewModel

<div id="intake" data-order-id="@Model.Id">
    <div class="row intake-title">
        <h4>Intake</h4>
        <span class="intake-blue">Please fill out any items that are not already auto-generated that could aid in the help of your clients placement.</span>
    </div>
    <hr/>
    <div class="intake-block">
        <div class="row intake-header">
            <h5>
                <span class ="intake-collapse">
                    <img class="intake-collapse-img" src="/Content/Images/collapse.png" />
                    <img class="intake-expand-img" src="/Content/Images/expand.png" />
                    Contact Information
                </span>
            </h5>
        </div>
        <div class="row intake-row collapse in">
            <div class="col-xs-6 col-sm-4 col-md-3 col-lg-3 intake-col">
                <label>Name:</label>
                <span class="intake-span">@Model.Transferee.FullName</span>
            </div>
            <div class="col-xs-6 col-sm-4 col-md-3 col-lg-3 intake-col">
                <label>Email:</label>
                <span class="intake-span">@Model.Transferee.Email</span>
            </div>
            <div class="col-xs-6 col-sm-4 col-md-3 col-lg-3 intake-col">
                <label>Phone:</label>
                <span class="intake-span">@Model.Transferee.PhoneNumber</span>
            </div>
        </div>
    </div>
    <hr/>
    <div class="intake-block" data-block="destination">
        <div class="row intake-header">
            <h5>
                <span class="intake-collapse">
                    <img class="intake-collapse-img" src="/Content/Images/collapse.png" />
                    <img class="intake-expand-img" src="/Content/Images/expand.png" />
                    Destination Location
                </span>
                <span class="intake-edit">
                    + Edit
                </span>
                <span class="intake-cancel">
                    x Cancel
                </span>
            </h5>
        </div>
        <div class="row intake-row collapse in">
            <div class="col-xs-6 col-sm-4 col-md-3 col-lg-3 intake-col">
                <label>City:</label>
                <span class="intake-span">@Model.DestinationCity</span>
                @Html.TextBoxFor(m => @Model.DestinationCity,new {@class="form-control intake-input"})
                @Html.HiddenFor(m => @Model.DestinationCity, new { @class = "intake-hidden" })
            </div>
            <div class="col-xs-6 col-sm-4 col-md-3 col-lg-3 intake-col">
                <label>State:</label>
                <span class="intake-span">@Model.DestinationState</span>
                @Html.TextBoxFor(m => @Model.DestinationState,new {@class= "form-control intake-input" })
                @Html.HiddenFor(m => @Model.DestinationState, new { @class = "intake-hidden" })
            </div>
            <div class="col-xs-6 col-sm-4 col-md-3 col-lg-3 intake-col">
                <label>Country:</label>
                <span class="intake-span">@Model.DestinationCountry</span>
                @Html.TextBoxFor(m => @Model.DestinationCountry, new { @class = "form-control intake-input" })
                @Html.HiddenFor(m => @Model.DestinationCountry, new { @class = "intake-hidden" })
            </div>
        </div>
    </div>
    <hr/>
    <div class="intake-block" data-block="origin">
        <div class="row intake-header">
            <h5>
                <span class="intake-collapse">
                    <img class="intake-collapse-img" src="/Content/Images/collapse.png" />
                    <img class="intake-expand-img" src="/Content/Images/expand.png" />
                    Departure Location
                </span>
                <span class="intake-edit">
                    + Edit
                </span>
                <span class="intake-cancel">
                    x Cancel
                </span>
            </h5>
        </div>
        <div class="row intake-row collapse in">
            <div class="col-xs-6 col-sm-4 col-md-3 col-lg-3 intake-col">
                <label>City:</label>
                <span class="intake-span">@Model.OriginCity</span>
                @Html.TextBoxFor(m => @Model.OriginCity, new { @class = "form-control intake-input" })
                @Html.HiddenFor(m => @Model.OriginCity, new { @class = "intake-hidden" })
            </div>
            <div class="col-xs-6 col-sm-4 col-md-3 col-lg-3 intake-col">
                <label>State:</label>
                <span class="intake-span">@Model.OriginState</span>
                @Html.TextBoxFor(m => @Model.OriginState, new { @class = "form-control intake-input" })
                @Html.HiddenFor(m => @Model.OriginState, new { @class = "intake-hidden" })
            </div>
            <div class="col-xs-6 col-sm-4 col-md-3 col-lg-3 intake-col">
                <label>Country:</label>
                <span class="intake-span">@Model.OriginCountry</span>
                @Html.TextBoxFor(m => @Model.OriginCountry, new { @class = "form-control intake-input" })
                @Html.HiddenFor(m => @Model.OriginCountry, new { @class = "intake-hidden" })
            </div>
        </div>
    </div>
    <hr/>
    @*<div class="intake-block">
        <div class="row intake-header">
            <h5>
                <span class="intake-collapse">
                    <img class="intake-collapse-img" src="/Content/Images/collapse.png" />
                    <img class="intake-expand-img" src="/Content/Images/expand.png" />
                    Relocation Dates
                </span>
                <span class="intake-edit">
                    + Edit
                </span>
                <span class="intake-cancel">
                    x Cancel
                </span>
            </h5>
        </div>
        <div class="row intake-row collapse in">
            <div class="col-sm-3 intake-col">
                <label>Familiarization Trip:</label>
                <span class="intake-span">Test Val</span>
                <input type="text" class="form-control intake-input"/>
            </div>
            <div class="col-sm-3 intake-col">
                <label>Final Arrival:</label>
                <span class="intake-span">Test Val</span>
                <input type="text" class="form-control intake-input"/>
            </div>
        </div>
        <div class="row intake-row collapse in">
            <div class="col-sm-3 intake-col">
                <label>Work Start Date:</label>
                <span class="intake-span">Test Val</span>
                <input type="text" class="form-control intake-input"/>
            </div>
        </div>
        <div class="row intake-row collapse in">
            <div class="col-sm-3 intake-col">
                <label>Assignment/Permanent:</label>
                <span class="intake-span">Test Val</span>
                <input type="text" class="form-control intake-input"/>
            </div>
            <div class="col-sm-3 intake-col">
                <label>Estimated Departure:</label>
                <span class="intake-span">Test Val</span>
                <input type="text" class="form-control intake-input"/>
            </div>
            <div class="col-sm-3 intake-col">
                <label>Assignment Length:</label>
                <span class="intake-span">Test Val</span>
                <input type="text" class="form-control intake-input"/>
            </div>
        </div>
    </div>*@
    <hr/>
    <div class="intake-block">
        <div class="row intake-header">
            <h5>
                <span class ="intake-collapse">
                    <img class="intake-collapse-img" src="/Content/Images/collapse.png" />
                    <img class="intake-expand-img" src="/Content/Images/expand.png" />
                    General
                </span>
            </h5>
        </div>
        <div class="row intake-row collapse in">
            <div class="col-xs-6 col-sm-4 col-md-3 col-lg-3 intake-col">
                <label>Rush:</label>
                <span class="intake-span">Yes</span>
            </div>
            <div class="col-xs-6 col-sm-4 col-md-3 col-lg-3 intake-col">
                <label>Vip:</label>
                <span class="intake-span">No</span>
            </div>
        </div>
    </div>
    <hr/>
    <div class="intake-block" data-block="family">
        <div class="row intake-header">
            <h5>
                <span class="intake-collapse">
                    <img class="intake-collapse-img" src="/Content/Images/collapse.png" />
                    <img class="intake-expand-img" src="/Content/Images/expand.png" />
                    Family And Pets
                </span>
                <span class="intake-edit">
                    + Edit
                </span>
                <span class="intake-cancel">
                    x Cancel
                </span>
                
            </h5>
        </div>
        <div class="row intake-row collapse in">
            <div class="col-xs-6 col-sm-4 col-md-3 col-lg-3 intake-col">
                <label>Spouse/Partner:</label>
                <span class="intake-span">@Model.SpouseName</span>
                @Html.TextBoxFor(m => @Model.SpouseName, new { @class = "form-control intake-input" })
                @Html.HiddenFor(m => @Model.SpouseName, new { @class = "intake-hidden" })
            </div>
            <div class="col-xs-6 col-sm-4 col-md-3 col-lg-3 intake-col">
                <label>Visa Type:</label>
                <span class="intake-span">@Model.SpouseVisaType</span>
                @Html.TextBoxFor(m => @Model.SpouseVisaType, new { @class = "form-control intake-input" })
                @Html.HiddenFor(m => @Model.SpouseVisaType, new { @class = "intake-hidden" })
            </div>
        </div>
        <div class="row intake-row collapse in">
            <div class="col-sm-9 intake-col">
                <span class="intake-add" data-entity-add="children">+Add Child</span>
            </div>
        </div>
        @if (@Model.Children.Count() > 0)
        {
            for (int i = 0; i < @Model.Children.Count(); i++)
            {
                <div class="row intake-row collapse in" data-entity-id="@Model.Children.ElementAt(i).Id" data-entity-collection="children">
                    <div class="col-xs-6 col-sm-4 col-md-3 col-lg-3 intake-col">
                        <label>Child:</label>
                        <span class="intake-span">@Model.Children.ElementAt(i).Name</span>
                        @Html.TextBoxFor(m => @Model.Children.ElementAt(i).Name, new {@class = "form-control intake-input" })
                        @Html.HiddenFor(m => @Model.Children.ElementAt(i).Name, new { @class = "intake-hidden" })
                    </div>
                    <div class="col-xs-6 col-sm-4 col-md-3 col-lg-3 intake-col">
                        <label>Age:</label>
                        <span class="intake-span">@Model.Children.ElementAt(i).Age</span>
                        @Html.TextBoxFor(m => @Model.Children.ElementAt(i).Age, new {@class = "form-control intake-input" })
                        @Html.HiddenFor(m => @Model.Children.ElementAt(i).Age, new { @class = "intake-hidden" })
                    </div>
                    <div class="col-xs-6 col-sm-4 col-md-3 col-lg-3 intake-col">
                        <label>Grade:</label>
                        <span class="intake-span">@Model.Children.ElementAt(i).Grade</span>
                        @Html.TextBoxFor(m => @Model.Children.ElementAt(i).Grade, new {@class = "form-control intake-input" })
                        @Html.HiddenFor(m => @Model.Children.ElementAt(i).Grade, new { @class = "intake-hidden" })
                    </div>
                    <div class="col-xs-6 col-sm-4 col-md-3 col-lg-3 intake-col">
                        <span class="intake-del">
                            x Delete
                        </span>
                    </div>
                </div>
            }
        }
        <div class="row intake-row collapse in">
            <div class="col-sm-9 intake-col">
                <label>Educational Preferences:</label>
                <span class="intake-span">@Model.ChildrenEducationPreferences</span>
                @Html.TextAreaFor(m => @Model.ChildrenEducationPreferences, new { @class = "form-control intake-input" })
                @Html.HiddenFor(m => @Model.ChildrenEducationPreferences, new { @class = "intake-hidden" })
            </div>
        </div>
        <div class="row intake-row collapse in">
            <div class="col-sm-9 intake-col">
                <span class="intake-add" data-entity-add="pets">+Add Pet</span>
            </div>
        </div>
        @if (@Model.Pets.Count() > 0)
        {
            for (int i = 0; i < @Model.Pets.Count(); i++)
            {
                <div class="row intake-row collapse in" data-entity-id="@Model.Pets.ElementAt(i).Id" data-entity-collection="pets">
                    <div class="col-xs-6 col-sm-4 col-md-3 col-lg-3 intake-col">
                        <label>Pet Type:</label>
                        <span class="intake-span">@Model.Pets.ElementAt(i).Type</span>
                        @Html.TextBoxFor(m => @Model.Pets.ElementAt(i).Type, new {@class = "form-control intake-input" })
                        @Html.HiddenFor(m => @Model.Pets.ElementAt(i).Type, new { @class = "intake-hidden" })
                    </div>
                    <div class="col-xs-6 col-sm-4 col-md-3 col-lg-3 intake-col">
                        <label>Breed:</label>
                        <span class="intake-span">@Model.Pets.ElementAt(i).Breed</span>
                        @Html.TextBoxFor(m => @Model.Pets.ElementAt(i).Breed, new {@class = "form-control intake-input" })
                        @Html.HiddenFor(m => @Model.Pets.ElementAt(i).Breed, new { @class = "intake-hidden" })
                    </div>
                    <div class="col-xs-6 col-sm-4 col-md-3 col-lg-3 intake-col">
                        <label>Weight/Size:</label>
                        <span class="intake-span">@Model.Pets.ElementAt(i).Size</span>
                        @Html.TextBoxFor(m => @Model.Pets.ElementAt(i).Size, new {@class = "form-control intake-input" })
                        @Html.HiddenFor(m => @Model.Pets.ElementAt(i).Size, new { @class = "intake-hidden" })
                    </div>
                    <div class="col-xs-6 col-sm-4 col-md-3 col-lg-3 intake-col">
                        <span class="intake-del">
                            x Delete
                        </span>
                    </div>
                </div>
            }
        }
        <div class="row intake-row collapse in">
            <div class="col-sm-9 intake-col">
                <label>Pet Notes:</label>
                <span class="intake-span">@Model.PetNotes</span>
                @Html.TextAreaFor(m => @Model.PetNotes, new { @class = "form-control intake-input" })
                @Html.HiddenFor(m => @Model.PetNotes, new { @class = "intake-hidden" })
            </div>
        </div>
    </div>
    <hr/>
    <div class="intake-block" data-block="services">
        <div class="row intake-header">
            <h5>
                <span class="intake-collapse">
                    <img class="intake-collapse-img" src="/Content/Images/collapse.png" />
                    <img class="intake-expand-img" src="/Content/Images/expand.png" />
                    Services
                </span>
                <span class="intake-save">
                    - Save
                </span>
            </h5>
        </div>
        @for(int i = 0; i < @Model.Services.Count(); i++)
        {
            <div class="row intake-row collapse in" data-entity-id="@Model.Services.ElementAt(i).Id" data-entity-collection="services">
                <div class="col-xs-2 col-sm-1 intake-col">
                    <input type="checkbox" class="intake-service-input" name="Selected"  @Model.Services.ElementAt(i).Selected ? checked ="checked" : String.Empty/>
                </div>
                <div class="col-xs-10 col-sm-5 intake-col">
                    <span class="intake-span">@Model.Services.ElementAt(i).Name</span>
                </div>
                <div class="col-xs-12 col-sm-5 intake-col">
                    @Html.TextBoxFor(s => @Model.Services.ElementAt(i).Notes, new { @class = "form-control intake-input intake-service-input" })
                </div>
            </div>
            
        }
        @for(int i = 0; i < @Model.PossibleServices.Count(); i++)
        {
            <div class="row intake-row collapse in" data-entity-collection="services" data-entity-type-id="@Model.PossibleServices.ElementAt(i).Id">
                <div class="col-sm-1 intake-col">
                    <input type="checkbox" value="false" class="intake-service-input" name="Selected"/>
                </div>
                <div class="col-sm-5 intake-col">
                    <span class="intake-span">@Model.PossibleServices.ElementAt(i).Name</span>
                </div>
                <div class="col-sm-5 intake-col">
                    <input type="text" name="Notes" class="form-control intake-input intake-service-input"/>    
                </div>
            </div>
        }
    </div>
    <div class="intake-block" data-block="temphousing">
        <div class="row intake-header">
            <h5>
                <span class="intake-collapse">
                    <img class="intake-collapse-img" src="/Content/Images/collapse.png" />
                    <img class="intake-expand-img" src="/Content/Images/expand.png" />
                    Temporary Housing
                </span>
                <span class="intake-edit">
                    + Edit
                </span>
                <span class="intake-cancel">
                    x Cancel
                </span>
            </h5>
        </div>
        <div class="row intake-row collapse in">
            <div class="col-xs-6 col-sm-4 col-md-3 col-lg-3 intake-col">
                <label>Length (Days):</label>
                <span class="intake-span">@Model.TempHousingDays</span>
                @Html.TextBoxFor(m => @Model.TempHousingDays, new {@class= "form-control intake-input" })
                @Html.HiddenFor(m => @Model.TempHousingDays, new { @class = "intake-hidden" })
            </div>
            <div class="col-xs-6 col-sm-4 col-md-3 col-lg-3 intake-col">
                <label>Last Day:</label>
                <span class="intake-span">@Model.TempHousingEndDateDisplay</span>
                @*<div class="input-group intake-date date">
                    <input class="form-control" data-date-today-btn="true" data-date-today-highlight="true" name="TempHousingEndDate" placeholder="Enter date or hit calendar" style="display: block; width: 85%" type="text" value="2017-10-24">
                    <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                </div>*@
                @if (@Model.TempHousingEndDate.HasValue)
                {
                    @Html.DatePicker("intake-date date", "TempHousingEndDate", Model.TempHousingEndDate.Value)
                }
                else
                {
                    @Html.DatePicker("intake-date date", "TempHousingEndDate")
                }
                <input type="hidden" value="@Model.TempHousingEndDateDisplay" class="intake-hidden" name="TempHousingEndDate"/>
                
            </div>
        </div>
    </div>

</div>
@Styles.Render("~/Styling/intake")
